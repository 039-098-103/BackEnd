generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BagType {
  bagTypeId   Int       @id
  bagTypeName String    @db.VarChar(30)
  Product     Product[]
}

model Color {
  colorId       Int             @id
  colorName     String          @db.VarChar(30)
  ProductDetail ProductDetail[]
}

model Customer {
  username  String     @id @db.VarChar(30)
  password  String     @db.Char(100)
  firstName String     @db.VarChar(50)
  lastName  String     @db.VarChar(30)
  CartItem  CartItem[]
  Orders    Orders[]
}

model OrderDetail {
  orderDetailId   Int           @id @default(autoincrement())
  productDetailId Int
  orderId         Int
  Orders          Orders        @relation(fields: [orderId], references: [orderId], onUpdate: Restrict, map: "OrderDetail_Order_FK")
  ProductDetail   ProductDetail @relation(fields: [productDetailId], references: [productDetailId], onUpdate: Restrict, map: "OrderDetail_ProductDetail_FK")

  @@index([orderId], map: "OrderDetail_Order_FK")
  @@index([productDetailId], map: "OrderDetail_ProductDetail_FK")
}

model Orders {
  orderId      Int           @id @default(autoincrement())
  quantity     Int
  total        Decimal       @db.Decimal(5, 2)
  deliveryDate DateTime      @db.Date
  address      String        @db.VarChar(400)
  username     String        @db.VarChar(30)
  Customer     Customer      @relation(fields: [username], references: [username], onUpdate: Restrict, map: "Order_Customer_FK")
  OrderDetail  OrderDetail[]

  @@index([username], map: "Order_Customer_FK")
}

model Product {
  productId     Int             @id @default(autoincrement())
  productName   String          @unique(map: "Product__UN") @db.VarChar(30)
  productDes    String          @db.VarChar(700)
  price         Decimal         @db.Decimal(5, 2)
  imageName     String          @db.VarChar(50)
  bagTypeId     Int
  BagType       BagType         @relation(fields: [bagTypeId], references: [bagTypeId], onUpdate: Restrict, map: "Product_BagType_FK")
  ProductDetail ProductDetail[]

  @@index([bagTypeId], map: "Product_BagType_FK")
}

model ProductDetail {
  productDetailId Int           @id @default(autoincrement())
  productId       Int
  colorId         Int
  Color           Color         @relation(fields: [colorId], references: [colorId], onUpdate: Restrict, map: "ProductDetail_Color_FK")
  Product         Product       @relation(fields: [productId], references: [productId], onUpdate: Restrict, map: "ProductDetail_Product_FK")
  CartItem        CartItem[]
  OrderDetail     OrderDetail[]

  @@index([colorId], map: "ProductDetail_Color_FK")
  @@index([productId], map: "ProductDetail_Product_FK")
}

model Worker {
  username  String   @id @db.VarChar(30)
  password  String   @db.Char(100)
  firstName String   @db.VarChar(30)
  lastName  String   @db.VarChar(30)
  DOB       DateTime @db.Date
  position  String   @db.VarChar(30)
}

model CartItem {
  cartItemId      Int           @id @default(autoincrement())
  username        String        @db.VarChar(30)
  productDetailId Int
  ProductDetail   ProductDetail @relation(fields: [productDetailId], references: [productDetailId], onUpdate: Restrict, map: "CartItem_ProductDetail_FK")
  Customer        Customer      @relation(fields: [username], references: [username], onUpdate: Restrict, map: "CartItem_Customer_FK")

  @@index([username], map: "CartItem_Customer_FK")
  @@index([productDetailId], map: "CartItem_ProductDetail_FK")
}
